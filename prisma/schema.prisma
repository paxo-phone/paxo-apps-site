generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id                   Int                    @id @default(autoincrement())
  email                String                 @unique
  username             String                 @unique

  sessions             Session[]
  passwordAuthStrategy PasswordAuthStrategy?
  apps                 App[]
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model PasswordAuthStrategy {
  id           Int    @id @default(autoincrement())
  userId       Int    @unique
  user         User   @relation(references: [id], fields: [userId], onDelete: Cascade)
  passwordHash String
}

model App {
  id            Int     @id @default(autoincrement())
  name          String
  shortDesc     String
  imageUrl      String
  extUrl        String?
  repoUrl       String
  downloads     Int     @default(0)
  category      Int
  underRevision Boolean @default(false)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  userId    Int
  user      User    @relation(references: [id], fields: [userId], onDelete: Cascade)

  releases  Release[]
}

model Release {
  id            Int     @id @default(autoincrement())
  name          String
  changelogUrl  String?
  downloadUrl   String
  sourceUrl     String
  underRevision Boolean @default(false)

  createdAt DateTime  @default(now())

  appId     Int
  app       App    @relation(references: [id], fields: [appId], onDelete: Cascade)
}